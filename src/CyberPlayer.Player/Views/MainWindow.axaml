<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="clr-namespace:CyberPlayer.Player.ViewModels"
        xmlns:models="clr-namespace:CyberPlayer.Player.Models"
        xmlns:services="clr-namespace:CyberPlayer.Player.Services"
		xmlns:local="clr-namespace:CyberPlayer.Player"
        xmlns:converters="clr-namespace:CyberPlayer.Player.ValueConverters"
        xmlns:mpv="clr-namespace:LibMpv.Client;assembly=LibMpv.Context"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        d:DataContext="{x:Static local:ViewModelLocator.Main}"
        x:Class="CyberPlayer.Player.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        x:CompileBindings="True"
        MinHeight="503"
        MinWidth="640"
        Width="{Binding MpvPlayer.WindowWidth}"
        Height="{Binding MpvPlayer.WindowHeight}"
        Icon="/Assets/Logo/cyber-logo-sunset.ico"
        Title="{Binding MpvPlayer.MediaName}">
	
	<Window.Resources>
		<converters:NegativeConverter x:Key="NegativeConverter" />
	</Window.Resources>
	
	<Window.KeyBindings>
		<KeyBinding Gesture="Space" Command="{Binding MpvPlayer.PlayPause}" />
		<KeyBinding Gesture="Left" Command="{Binding MpvPlayer.SeekCommand}" CommandParameter="{Binding Settings.SeekChange, Converter={StaticResource NegativeConverter}}" />
		<KeyBinding Gesture="Right" Command="{Binding MpvPlayer.SeekCommand}" CommandParameter="{Binding Settings.SeekChange}" />
		<KeyBinding Gesture="Ctrl+Right" Command="{Binding MpvPlayer.FrameStepCommand}" CommandParameter="{x:Static mpv:MpvCommands.StepForward}" />
		<KeyBinding Gesture="Ctrl+Left" Command="{Binding MpvPlayer.FrameStepCommand}" CommandParameter="{x:Static mpv:MpvCommands.StepBackward}" />
		<KeyBinding Gesture="M" Command="{Binding MpvPlayer.set_IsMuted}" CommandParameter="{Binding !MpvPlayer.IsMuted}" />
		<KeyBinding Gesture="Up" Command="{Binding MpvPlayer.VolumeCommand}" CommandParameter="{Binding Settings.VolumeChange}" />
		<KeyBinding Gesture="Down" Command="{Binding MpvPlayer.VolumeCommand}" CommandParameter="{Binding Settings.VolumeChange, Converter={StaticResource NegativeConverter}}" />
		<KeyBinding Gesture="I" Command="{Binding MpvPlayer.set_TrimStartTime}" CommandParameter="{Binding MpvPlayer.SeekValue}" />
		<KeyBinding Gesture="O" Command="{Binding MpvPlayer.set_TrimEndTime}" CommandParameter="{Binding MpvPlayer.SeekValue}" />
	</Window.KeyBindings>
	
	<Window.Styles>
		<Style Selector=":is(Control).FadeFullscreen">
			<Setter Property="Opacity" Value="0" />
			<Setter Property="Transitions">
				<Transitions>
					<DoubleTransition Property="Opacity" Duration="0:0:0.35" Easing="QuadraticEaseInOut" />
				</Transitions>
			</Setter>
		</Style>
		<Style Selector=":is(Control).FadeFullscreen:pointerover">
			<Setter Property="Opacity" Value="1" />
		</Style>
	</Window.Styles>

	<Design.DataContext>
        <vm:MainWindowViewModel />
    </Design.DataContext>
	
	<NativeMenu.Menu>
		<NativeMenu>
			<NativeMenuItem Header="File">
				<NativeMenu>
					<NativeMenuItem Header="Open" Command="{Binding MediaPickerCommand}" />
					<NativeMenuItem Header="Close" Command="{Binding ExitAppCommand}" />
				</NativeMenu>
			</NativeMenuItem>
			<NativeMenuItem Header="Edit">
				<NativeMenu>
					<NativeMenuItem Header="Trim" Command="{Binding Trim}" />
					<NativeMenuItem Header="Audio Track Selection" />
					<NativeMenuItem Header="Remux" />
					<NativeMenuItem Header="Export" Command="{Binding Export}" />
				</NativeMenu>
			</NativeMenuItem>
			<NativeMenuItem Header="View">
				<NativeMenu>
					<NativeMenuItem Header="MediaInfo" Command="{Binding ViewVideoInfoCommand}" CommandParameter="{x:Static services:VideoInfoType.MediaInfo}" />
					<NativeMenuItem Header="FFprobe" Command="{Binding ViewVideoInfoCommand}" CommandParameter="{x:Static services:VideoInfoType.FFprobe}" />
					<NativeMenuItem Header="Mpv" Command="{Binding ViewVideoInfoCommand}" CommandParameter="{x:Static services:VideoInfoType.Mpv}" />
				</NativeMenu>
			</NativeMenuItem>
			<NativeMenuItem Header="Help">
				<NativeMenu>
					<NativeMenuItem Header="About" />
					<NativeMenuItem Header="Github" Command="{Binding OpenWebLinkCommand}" CommandParameter="https://github.com/cybertron-cube/CyberVideoPlayer" />
					<NativeMenuItem Header="Check for Updates" Command="{Binding CheckForUpdatesCommand}" />
				</NativeMenu>
			</NativeMenuItem>
		</NativeMenu>
	</NativeMenu.Menu>

	<Grid Name="MainGrid" ColumnDefinitions="*" RowDefinitions="33, *, 110"><!-- 33,*,50,40/35 -->
		<Menu Name="MenuBar" Background="DimGray" Grid.Row="0" Height="33" Margin="0, 0, 0, 0">
			<MenuItem Header="_File">
				<MenuItem Header="_Open" Command="{Binding MediaPickerCommand}" />
				<MenuItem Header="_Close" Command="{Binding ExitAppCommand}" />
			</MenuItem>
			<MenuItem Header="_Edit">
				<MenuItem Header="_Trim" Command="{Binding Trim}" />
				<MenuItem Header="_Audio Track Selection" />
				<MenuItem Header="_Remux" />
				<MenuItem Header="_Export" Command="{Binding Export}" />
			</MenuItem>
			<MenuItem Header="_View">
				<MenuItem Header="MediaInfo" Command="{Binding ViewVideoInfoCommand}" CommandParameter="{x:Static services:VideoInfoType.MediaInfo}" />
				<MenuItem Header="FFprobe" Command="{Binding ViewVideoInfoCommand}" CommandParameter="{x:Static services:VideoInfoType.FFprobe}" />
				<MenuItem Header="Mpv" Command="{Binding ViewVideoInfoCommand}" CommandParameter="{x:Static services:VideoInfoType.Mpv}" />
			</MenuItem>
			<MenuItem Header="_Help">
				<MenuItem Header="_Licenses" />
				<MenuItem Header="Github" Command="{Binding OpenWebLinkCommand}" CommandParameter="https://github.com/cybertron-cube/CyberVideoPlayer" />
				<MenuItem Header="Check for Updates" Command="{Binding CheckForUpdatesCommand}" />
			</MenuItem>
		</Menu>
		
		<Panel Name="VideoPanel" PointerPressed="VideoPanel_OnPointerPressed" Grid.Row="1" DragDrop.AllowDrop="True" Background="Black">
			<!--Set background in order for contextmenu to interactable
				*this doesn't work for nativevideoview-->
			<Panel.ContextMenu>
				<ContextMenu>
					<MenuItem Name="AudioTrackMenu" Header="Audio Tracks" Classes="SubItems" ItemsSource="{Binding MpvPlayer.AudioTrackInfos}">
						<MenuItem.Styles>
							<Style Selector="MenuItem.SubItems MenuItem">
								<Setter Property="Command" Value="{Binding $parent[MenuItem].((vm:MainWindowViewModel)DataContext).MpvPlayer.set_SelectedAudioTrack}" />
								<Setter Property="CommandParameter" Value="{Binding ., DataType=models:TrackInfo}" />
								<Setter Property="Header" Value="{Binding Description, DataType=models:TrackInfo}" />
								<Setter Property="Icon">
									<Template>
										<Panel>
											<Panel.Styles>
												<Style Selector="Path">
													<Setter Property="Data" Value="{StaticResource CircleGeometry}" />
													<Setter Property="Margin" Value="1, 1" />
												</Style>
											</Panel.Styles>
											<Path Stroke="#635552"
											      StrokeThickness="2"
											      Fill="Transparent"
											      IsVisible="{Binding !Selected, DataType=models:TrackInfo}" />
											<Path Stroke="Gray"
											      StrokeThickness="2"
											      Fill="Gray"
											      IsVisible="{Binding Selected, DataType=models:TrackInfo}" />
											<Path Fill="Blue"
											      IsVisible="{Binding Selected, DataType=models:TrackInfo}">
												<Path.RenderTransform>
													<ScaleTransform ScaleX="0.5" ScaleY="0.5" />
												</Path.RenderTransform>
											</Path>
										</Panel>
									</Template>
								</Setter>
							</Style>
						</MenuItem.Styles>
					</MenuItem>
					<MenuItem Header="Show Menu Bar" Click="ShowMenuBarMenuItem_OnClick" />
				</ContextMenu>
			</Panel.ContextMenu>
			<ContentControl Content="{Binding VideoContent}" />
		</Panel>
		
		<Grid Name="LowerGrid" Grid.Row="2" RowDefinitions="50, 40, 20" Background="DimGray">
			<ContentControl Name="SeekContentControl" Grid.Row="0" Content="{Binding SeekContent}" />
			
			<DockPanel Name="ControlsPanel" Grid.Row="1" LastChildFill="False" Margin="5, 0">
				<Button
					Name="PlayButton"
					Height="32"
					Width="32"
					Focusable="False"
					Command="{Binding MpvPlayer.PlayPause}">
					<Panel>
						<Image IsVisible="{Binding MpvPlayer.IsPlaying}" Source="{SvgImage /Assets/Images/Controls_Pause.svg}" />
						<Image IsVisible="{Binding !MpvPlayer.IsPlaying}" Source="{SvgImage /Assets/Images/Controls_Play.svg}" />
					</Panel>
				</Button>
				<Button
					Height="32"
					Width="32"
					Focusable="False"
					Command="{Binding MpvPlayer.FrameStepCommand}"
					CommandParameter="{x:Static mpv:MpvCommands.StepBackward}">
					<Image Source="{SvgImage /Assets/Images/Controls_FrameStep.svg}">
						<Image.RenderTransform>
							<ScaleTransform ScaleX="-1" />
						</Image.RenderTransform>
					</Image>
				</Button>
				<Button
					Height="32"
					Width="32"
					Focusable="False"
					Command="{Binding MpvPlayer.FrameStepCommand}"
					CommandParameter="{x:Static mpv:MpvCommands.StepForward}">
					<Image Source="{SvgImage /Assets/Images/Controls_FrameStep.svg}" />
				</Button>
				<!--height: 30, width: 100-->
				<Label
					VerticalAlignment="Center"
					VerticalContentAlignment="Center"
					Width="41"
					DockPanel.Dock="Right"
					Content="{Binding MpvPlayer.VolumeValue, StringFormat='{}{0:0}%'}" />
				<Slider
					Name="VolumeSlider"
					Classes="Volume"
					Foreground="LimeGreen"
					Background="Transparent"
					DockPanel.Dock="Right"
					Maximum="100"
					LargeChange="20"
					SmallChange="5"
					Value="{Binding MpvPlayer.VolumeValue}"
					Height="20"
					Width="60"
					IsVisible="True"
					Focusable="False"/>
				<Button
					Name="MuteButton"
					Background="Transparent"
					Height="32"
					Margin="0, 0, 0, 0"
					DockPanel.Dock="Right"
					Focusable="False"
					Command="{Binding MpvPlayer.set_IsMuted}"
					CommandParameter="{Binding !MpvPlayer.IsMuted}">
					<Panel>
						<Image Source="{SvgImage /Assets/Images/Controls_Mute_Speaker.svg}" />
						<Image IsVisible="{Binding !MpvPlayer.IsMuted}" Source="{SvgImage /Assets/Images/Controls_Mute_Waves.svg}" />
					</Panel>
				</Button>
			</DockPanel>
			
			<Border Grid.Row="2" Background="Black">
				<DockPanel Name="InfoPanel" Margin="3, 0" LastChildFill="False">
					<TextBlock
						DockPanel.Dock="Right">
						<TextBlock.Text>
							<MultiBinding StringFormat="{}{0} / {1}">
								<Binding Path="MpvPlayer.SeekTimeCodeString" />
								<Binding Path="MpvPlayer.DurationTimeCodeString" />
							</MultiBinding>
						</TextBlock.Text>
					</TextBlock>
				</DockPanel>
			</Border>
		</Grid>
	</Grid>
	
</Window>
