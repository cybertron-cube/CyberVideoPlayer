name: Create Release

on:
  push:
    branches:
      - main
      - dev

permissions:
  contents: write
  issues: write
  pull-requests: write
  id-token: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    outputs:
      version: ${{ steps.create-release.outputs.VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: 'npm'
          cache-dependency-path: build/release-config/package-lock.json
      - name: Install semantic-release/exec
        run: npm install @semantic-release/exec -D
      - name: Apply semantic release config
        run: sh build/release-config/config-apply.sh release
      - name: Create release
        id: create-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
      - name: Check release/s
        run: cat $GITHUB_OUTPUT
  build-windows:
    name: Build Windows
    needs: [release]
    if: ${{ needs.release.outputs.VERSION != '' }}
    permissions:
      contents: write
    uses: ./.github/workflows/build-windows.yml
    with:
      release-version: ${{ needs.release.outputs.VERSION }}
  build-linux:
    name: Build Linux
    needs: [release]
    if: ${{ needs.release.outputs.VERSION != '' }}
    permissions:
      contents: write
    uses: ./.github/workflows/build-linux.yml
    with:
      release-version: ${{ needs.release.outputs.VERSION }}
  build-osx:
    name: Build OSX
    needs: [release]
    if: ${{ needs.release.outputs.VERSION != '' }}
    permissions:
      contents: write
    uses: ./.github/workflows/build-osx.yml
    with:
      release-version: ${{ needs.release.outputs.VERSION }}
  publish:
    name: Publish release
    runs-on: ubuntu-latest
    needs: [release, build-windows, build-linux, build-osx]
    if: ${{ needs.release.outputs.VERSION != '' }}
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Publish
        run: gh release edit ${{ needs.release.outputs.VERSION }} --draft=false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
