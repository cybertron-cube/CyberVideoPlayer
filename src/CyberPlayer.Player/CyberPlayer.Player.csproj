<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net7.0</TargetFramework>
    <Nullable>enable</Nullable>
    <BuiltInComInteropSupport>true</BuiltInComInteropSupport>
    <ApplicationManifest>app.manifest</ApplicationManifest>
    <PackageId>$(AssemblyName)</PackageId>
    <AssemblyName>CyberVideoPlayer</AssemblyName>
    <Configurations>Debug;Release;Release-win-x64-multi;Release-win-x64-single;Release-linux-x64-single;Release-linux-x64-multi;Release-osx-x64-multi;Release-osx-x64-single;Release-portable-single;Release-portable-multi</Configurations>
    <Platforms>AnyCPU</Platforms>
  </PropertyGroup>

  <!-- MULTI;SINGLE;PORTABLE;WINX64;OSXX64;LINUXX64 -->
  
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DefineConstants>$(DefineConstants);SINGLE;WINX64</DefineConstants>
  </PropertyGroup>
  
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DefineConstants>$(DefineConstants);WINX64;SINGLE;</DefineConstants>
  </PropertyGroup>
  
  <PropertyGroup Condition=" '$(Configuration)' == 'Release-win-x64-multi' ">
    <DefineConstants>$(DefineConstants);MULTI;WINX64</DefineConstants>
    <Optimize>true</Optimize>
  </PropertyGroup>
  
  <PropertyGroup Condition=" '$(Configuration)' == 'Release-win-x64-single' ">
    <DefineConstants>$(DefineConstants);SINGLE;WINX64;</DefineConstants>
    <Optimize>true</Optimize>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release-linux-x64-multi' ">
    <DefineConstants>$(DefineConstants);MULTI;LINUXX64</DefineConstants>
    <Optimize>true</Optimize>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release-linux-x64-single' ">
    <DefineConstants>$(DefineConstants);SINGLE;LINUXX64</DefineConstants>
    <Optimize>true</Optimize>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release-osx-x64-multi' ">
    <DefineConstants>$(DefineConstants);MULTI;OSXX64</DefineConstants>
    <Optimize>true</Optimize>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release-osx-x64-single' ">
    <DefineConstants>$(DefineConstants);SINGLE;OSXX64</DefineConstants>
    <Optimize>true</Optimize>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release-portable-multi' ">
    <DefineConstants>$(DefineConstants);MULTI;PORTABLE</DefineConstants>
    <Optimize>true</Optimize>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release-portable-single' ">
    <DefineConstants>$(DefineConstants);SINGLE;PORTABLE</DefineConstants>
    <Optimize>true</Optimize>
  </PropertyGroup>

  <ItemGroup>
    
    <!--TODO Remove this include after changing window icon-->
    <AvaloniaResource Include="Assets\avalonia-logo.ico" />
    
    <AvaloniaResource Include="Assets\Images\*.svg" />
    <AvaloniaResource Include="Assets\Images\*.ico" />
    <None Remove=".gitignore" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Avalonia" Version="11.0.999-cibuild0036903-beta" />
    <PackageReference Include="Avalonia.Desktop" Version="11.0.999-cibuild0036903-beta" />
    <PackageReference Include="Avalonia.Svg.Skia" Version="11.0.0-rc1.1" />
    <PackageReference Include="Avalonia.Themes.Fluent" Version="11.0.999-cibuild0036903-beta" />
    <!--Condition below is needed to remove Avalonia.Diagnostics package from build output in Release configuration.-->
    <PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Avalonia.Diagnostics" Version="11.0.999-cibuild0036903-beta" />
    <PackageReference Include="Avalonia.ReactiveUI" Version="11.0.999-cibuild0036903-beta" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\..\Cyber-lib\AvaloniaMessageBox\AvaloniaMessageBox.csproj" />
    <ProjectReference Include="..\..\..\Cyber-lib\Common Libraries\Cybertron.csproj" />
    <ProjectReference Include="..\LibMpv.Context\LibMpv.Context.csproj" />
  </ItemGroup>
  
  <ItemGroup>
    <Folder Include="Models\" />
  </ItemGroup>

  <Target Name="FFmpegCopy" AfterTargets="CoreCompile">
    <Copy Condition=" $(DefineConstants.Contains(WINX64)) Or $(DefineConstants.Contains(PORTABLE)) " SourceFiles="..\..\ffmpeg\win\ffmpeg.exe;..\..\ffmpeg\win\ffprobe.exe" DestinationFolder="$(OutDir)\ffmpeg" SkipUnchangedFiles="true" />
    <Copy Condition=" $(DefineConstants.Contains(LINUXX64)) " SourceFiles="..\..\ffmpeg\linux\ffmpeg;..\..\ffmpeg\linux\ffprobe" DestinationFolder="$(OutDir)\ffmpeg" SkipUnchangedFiles="true" />
    <Copy Condition=" $(DefineConstants.Contains(OSXX64)) " SourceFiles="..\..\ffmpeg\osx\ffmpeg;..\..\ffmpeg\osx\ffprobe" DestinationFolder="$(OutDir)\ffmpeg" SkipUnchangedFiles="true" />
    <Copy Condition=" $(DefineConstants.Contains(PORTABLE)) " SourceFiles="..\..\ffmpeg\linux\ffmpeg;..\..\ffmpeg\linux\ffprobe" DestinationFiles="$(OutDir)\ffmpeg\ffmpeg-linux;$(OutDir)\ffmpeg\ffprobe-linux" SkipUnchangedFiles="true" />
    <Copy Condition=" $(DefineConstants.Contains(PORTABLE)) " SourceFiles="..\..\ffmpeg\osx\ffmpeg;..\..\ffmpeg\osx\ffprobe" DestinationFiles="$(OutDir)\ffmpeg\ffmpeg-osx;$(OutDir)\ffmpeg\ffprobe-osx" SkipUnchangedFiles="true" />
  </Target>
</Project>
