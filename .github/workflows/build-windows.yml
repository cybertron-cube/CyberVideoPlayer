name: Build Windows

on:
  workflow_call:
    inputs:
      release-version:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      release-version:
        required: true
        type: string

jobs:
  build-windows:
    name: Build Windows
    runs-on: windows-latest
    permissions:
      contents: write
    env:
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          submodules: "recursive"
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json
          cache: true
          cache-dependency-path: src\CyberPlayer.Player\packages.lock.json
      - name: Install nuget package dependencies
        run: dotnet restore --locked-mode
      - name: Download FFmpeg Binaries
        run: python build/build.py -dlffmpeg
      - name: Run build script
        run: python build/build.py -version ${{ inputs.release-version }} -compile win-x64 -buildupdater -cpymds -cpyffmpeg -cpympv -cpymediainfo -cpyupdater -rmpdbs -zip -winpkg
      - name: Upload assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ inputs.release-version }} build/output/win-x64.zip build/output/CVP-win-x64-setup.exe
